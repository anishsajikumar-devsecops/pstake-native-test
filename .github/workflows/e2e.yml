name: CI Workflow for pstake-native with Matrix E2E Tests

on:
  pull_request:
    branches:
      - 'CI-branch-test'
  push:
    branches:
      - 'CI-branch-test'

env:
  IMAGE_NAME: pstaked-local
  IMAGE_TAG: latest
  TAR_PATH: pstaked-image.tar

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-docker:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 2375:2375

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to DockerHub (If required)
        if: github.event_name != 'pull_request'
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        env:
          DOCKER_HOST: tcp://localhost:2375

      - name: Generate Local Image using Heighliner Docker Container
        run: |
          docker run --rm -v $PWD:/workspace -w /workspace heighliner-build-env:latest heighliner build -c pstake --local -f ./chains.yaml
        env:
          DOCKER_HOST: tcp://localhost:2375

      - name: Save Docker image to tarball
        run: docker save ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} > ${{ env.TAR_PATH }}

      - name: Upload Docker image tarball as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image-tarball
          path: ${{ env.TAR_PATH }}

  e2e-tests:
    needs: build-docker
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test: ["e2e-test-basic", "e2e-test-ibc-transfer"]
      fail-fast: false

    steps:
      - name: Download Docker Image Tarball Artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image-tarball

      - name: Load Docker Image
        run: docker load < ${{ env.TAR_PATH }}

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Checkout pstake-native chain code
        uses: actions/checkout@v3

      - name: Run End-to-End Test
        run: |
          make ${{ matrix.test }}
