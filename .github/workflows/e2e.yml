name: CI/CD with Docker Build and Integration Tests

on:
  push:
    branches:
      - 'CI-branch-test'

jobs:
  build-and-integration-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21.5'

      - name: Cache Go Modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build Docker Image
        run: make docker-build
        working-directory: ./docker
        env:
          DOCKER_FILE: Dockerfile
          PROCESS: pstake
          IMAGE_NAME: persistenceone/pstake
          TAG_NAME: latest

      - name: Install Dependencies
        run: |
          go mod tidy
          go mod download

      - name: Run Unit Tests
        run: go test ./... -v

      - name: Run Docker Container
        run: make docker-run
        working-directory: ./docker
        env:
          CONTAINER_NAME: pstake_container

      - name: Run Integration Tests
        run: |
          # Add commands or scripts to wait for the container to be fully up if necessary
          sleep 10  # Example: wait a bit for the container to be ready
          # Here you should add your command to run integration tests
        env:
          # Set necessary environment variables for your tests

      - name: Cleanup
        if: always()
        run: make docker-clean
        working-directory: ./docker
